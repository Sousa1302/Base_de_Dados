tuplo -> Relação direta de um dado especifico de uma linha a uma coluna 
coluna -> Campo
linha -> Dado

SQL -> Structured Query Language 

Modelo de Dados -> Um plano que define como os dados serão organizados em um banco de dados

Modelo relacional -> Uma maneira de organizar os dados em tabelas que se relacionam entre si.
1:1 - um para um
1:n - um para muitos
n:n - muitos para muitos

Chave Primaria -> Chave / Valor , que usamos para referenciar a(s) linha(s) de dados.

Chave Estrangeira -> Chave / Valor , que usamos para referenciar a(s) linha(s) de dados de outra tabela.

Diz se que uma relação esta na primeira forma normal se nao tem grupos de atributos ou atributos repetitivos ( = campos repetitivos ).
Ex ( exemplo negativo ): Um aluno com matricula , nome e curso. Neste exemplo tera a possibilidade de repeticao de atributos.

Diz se que uma relação esta na segunda forma normal se todos os atributos fizerem referencia a chaves de outras tabelas .

Diz se que uma relação esta na terceira forma normal se estiver na segunda forma normal e se todos os seus atributos nao chave tambem sao designados como nao chave.


NOT NULL -> Means that the column must always contain a value.
UNIQUE -> A column will have a unique value
primary key (...) -> Puts a primary key 

ex: unique (id)
ex: primary key (orderID),
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 

docker pull mysql                      -> Faz download da imagem mysql atraves do dockerhub

docker run --name mysql -v ./volumecriadoforadocontainer:/volumecriadodentrodocontainer -e MYSQL_ROOT_PASSWORD=pass  -p 3306:3306 -d mysql            -> Cria um container no qual executa uma imagem

-v     -> Para adicionar um volume atached 
-p     -> Para designar ports ao container

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

mysql -u root -p                       -> Para entrar no ambiente mysql

show databases;                        -> Mostra as databases 
create database nome_da_basedados;     -> Cria uma base de dados 
use nome_da_basedados;                 -> Para utilizar uma base de dados 
drop database nome_da_basedados;       -> Elimina uma base de dados 
drop table nome_da_basedados;          -> Elimina uma table 
show tables;                           -> Mostra as tabelas dentro daquela database onde estamos
show columns from nome_da_table;       -> Mostra a estrutura de uma table

create table nome_da_tabela (          -> Cria uma tabela, e dentro dos parenteses fica a estrutura da mesma
    -> PessoaID int,
    -> ultimoNome varchar(255),
    -> primeiroNome varchar(255),
    -> morada varchar(255),
    -> cidade varchar(255)
    -> );         

create table teste as select ultimoNome, primeiroNome from pessoa;        -> Cria uma tabela chamada "teste" com selecionado "ultimoNome" e "primeiroNome" da tabela pessoa

alter table pessoa add (                                                  -> Altera a tabela "pessoa" adicionando o campo email          
    -> email varchar(255));

alter table pessoa drop column email;                                     -> Altera a tabela "pessoa" eliminando a coluna email 

alter table pessoa add dataNascimento date;                               -> Altera a tabela "pessoa" adicionando dataNasicmento do tipo "date"

alter table pessoa modify column dataNascimento year;                     -> Altera a tabela "pessoa" modificando a coluna dataNascimento po tipo "year"

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

insert  -> Para inserir valores num campo de uma table
ex: insert into name_of_table (column1 , column2, column3)
    -> values ("value1","value2",value3);

show    -> Mostra os valores numa table
ex: select * from name_of_table;

create view nome_da_view as select nome_da_column from nome_table where condition;           -> Cria basicamente um atalho
ex: create view maioresDeVinte as select ultimoNome from pessoas where age>20;

foreign key (column1) references nome_table (column2);
ex: foreign key (ID_professor) references alunos (ID_aluno);
// adiciona uma chave estrangeira a coluna ID_Professor que tem ligacao a coluna ID_aluno da table alunos

select count(distinct column) from table;
// Mostra a quantidade de entidades diferentes naquela coluna daquela tabela 

select * (or columns) from table where (condition);
ex: select * from Costumer where CostumerName = "jose";

select * (or columns) from table where (condition) order by column desc;       // descendente
ex: select * from Costumer where city = "London" order by ContactName asc;    // ascendente

inner join -> juncao das duas tabelas , aquilo que e comum entre elas 
left join -> todos os dados da tabela 1 mais os dados da tabela 2 que sao comum na tabela 1
right join -> todos os dados da tabela 2 mais os dados da tabela 1 que sao comum na tabela 2
cross join -> todos os dados das duas tabelas em conjunto 


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

docker exec 4f8f /usr/bin/mysqldump -u root -ppass escola > escola_backup.sql 
mysqldump: [Warning] Using a password on the command line interface can be insecure.
GonRSousa@nexus-desktop:~$ ls
 Desktop      escola_backup       Imagens   Música    School_Work   Transferências  'VirtualBox VMs'
 Documentos   escola_backup.sql   Modelos   Público   snap          Vídeos
GonRSousa@nexus-desktop:~$ cat escola_backup.sql





